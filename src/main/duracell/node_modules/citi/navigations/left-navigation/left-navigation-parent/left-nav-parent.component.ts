import { Component, OnInit, Input, ViewChild, ViewChildren, QueryList } from '@angular/core';
import {ChildComponent} from '../left-navigation-child/left-nav-child.component';

/**
 * @Component: Left Nav Parent
 * @Description: This is parent component inside the left navigation menu. 
*/
@Component({
  selector: '.citi-left-nav-parent',
  template: require('./left-nav-parent.component.html'),
  styles: [ require('./left-nav-parent.component.css') ]
})
export class ParentComponent implements OnInit {

  constructor() { }

  private _childList;
  private selectedIndex = null;
  isExpanded: boolean = false;

  // Reference to child component
  @ViewChildren(ChildComponent)
  liChildList: QueryList<ChildComponent>;
  
  //Custom Attributes
  @Input() hasChildren: Boolean = false;
  @Input() title: String;
  @Input() href: String;
  @Input() set leftNavMenuList(childList){
      this._childList = childList;
  }
  
  get leftNavMenuList(){
    return this._childList;
  }

  // When span clicked
  isClicked(){                  
    this.isExpanded = !this.isExpanded;
  }

  /**
  * @Function: logClick
  * @Description: This function adds class is-expanded to a clicked nav item if it has childrens.
  * @Param: (String) - event - Event object.
  * @Param: (String) - index - Index of clicked nav item.
  * @Return: -
*/
  logClick(event, index){
      event.stopPropagation();
      var clickedItem = this._childList.find( function(item, itemIndex){ return itemIndex === index});
     
      if(clickedItem.hasChildren){
        // Clears all "is-expanded" classes
        this._childList.forEach(
          function(component, index){
            component.isExpanded = false;
          }.bind(this)
        );
        // Sets the isExpanded property for the clicked target
        if(this.selectedIndex === null){
          this.selectedIndex = index;
        }
        else{
          this.selectedIndex = this.selectedIndex !== index ? index : null;
        }
      }
  }

  ngOnInit() { }

}
