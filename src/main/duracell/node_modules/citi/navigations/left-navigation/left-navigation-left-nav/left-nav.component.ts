import { Component, OnInit, Input, ViewChild, ViewChildren, QueryList } from '@angular/core';
import {ParentComponent} from '../left-navigation-parent/left-nav-parent.component';


/**
 * @Component: Left Nav
 * @Description: This is the left navigation component which is used to create the left navigation 
 * menu that consumes JSON object.
*/
@Component({
  selector: 'citi-left-nav',
  template: require('./left-nav.component.html'),
  styles: [ require('./left-nav.component.css') ]
})
export class LeftnavComponent implements OnInit {

  constructor() { }
  
  private _items;
  private selectedIndex = null;

  // Reference to child component
  @ViewChildren(ParentComponent)
  liList: QueryList<ParentComponent>;
  
  /**
  * @Property: navItems 
  * @Description:  Input JSON with hasChildren property that specifies if a particular nav item has children or not. Recognizes first level child property 
  * as leftNavMenuList and sub child as subMenuList. 
  * @Type: JSON 
*/
  @Input() set navItems(itemList){
    this._items = itemList;
  }

  get navItems(){
    return this._items;
  }

  /**
  * @Function: logClick
  * @Description: This function adds class is-expanded to a clicked nav item if it has childrens.
  * @Param: (String) - event - Event object.
  * @Param: (String) - index - Index of clicked nav item.
  * @Return: -
*/
  public logClick(event, index){

    var clickedItem = this.liList.find( function(item, itemIndex){ return itemIndex === index});

    if(clickedItem.hasChildren){
      // Clears all "is-expanded" classes
      this.liList.forEach(
        function(component, index){
          component.isExpanded = false;
        }.bind(this)
      );
      // Sets the isExpanded property for the clicked target
      if(this.selectedIndex === null){
        this.selectedIndex = index;
      }
      else{
        this.selectedIndex = this.selectedIndex !== index ? index : null;
      }
    }
  }

  ngOnInit() { }

}
