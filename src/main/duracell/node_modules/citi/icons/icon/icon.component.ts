import { Component, OnInit, Input } from '@angular/core';
import { iconTypeClassSettings, iconTypeCSS } from './icon.component.classes';

/**
 * @Component: Icon
 * @Description: This is the icon component and is used to create icon with message
 * from Bootstrap.
*/
@Component({
  selector: 'citi-icon',
  template: require('./icon.component.html'),
  styles: [ require('./icon.component.css') ]
})
export class IconComponent implements OnInit {
  settings: iconTypeClassSettings = new iconTypeClassSettings;
  /**
    * @Property: idStr 
    * @Description: This defines the id of the icon component
    * @Type: string 
   */
  @Input() idStr: string;
  /**
    * @Property: iconTextMessage 
    * @Description: This defines the icon message text
    * @Type: string 
   */
  @Input() iconTextMessage: string;
  /**
    * @Property: isSROnly 
    * @Description: This defines whether the icon info to be read only. 
    * @Type: boolean 
   */
  @Input() isSROnly: boolean;
  private iconTypeClass: string;

  /**
    * @Property: iconType 
    * @Description: This defines the type of icon to be displayed. 
    * @Type: string (ex: blueError, redError, blueAlert , redAlert etc.) 
   */
  @Input()
  set iconType(iconType: any) {
    this.settings.iconType = iconType;
  }

  constructor() { }

  ngOnInit() {
    switch (this.settings.iconType) {
      case 'blueError':
        this.iconTypeClass = iconTypeCSS.blueError;
        break;
      case 'redError':
        this.iconTypeClass = iconTypeCSS.redError;
        break;
      case 'blueAlert':
        this.iconTypeClass = iconTypeCSS.blueAlert;
        break;
      case 'redAlert':
        this.iconTypeClass = iconTypeCSS.redAlert;
        break;
      case 'blueStar':
        this.iconTypeClass = iconTypeCSS.blueStar;
        break;
      case 'closeIcon':
        this.iconTypeClass = iconTypeCSS.closeIcon;
        break;
      case 'redCloseIcon':
        this.iconTypeClass = iconTypeCSS.redCloseIcon;
        break;
      case 'refreshIcon':
        this.iconTypeClass = iconTypeCSS.refreshIcon;
        break;
      case 'checkIcon':
        this.iconTypeClass = iconTypeCSS.checkIcon;
        break;
      case 'plusIcon':
        this.iconTypeClass = iconTypeCSS.plusIcon;
        break;
      case 'MinusIcon':
        this.iconTypeClass = iconTypeCSS.MinusIcon;
        break;
      case 'profileIcon':
        this.iconTypeClass = iconTypeCSS.profileIcon;
        break;
      case 'lockIcon':
        this.iconTypeClass = iconTypeCSS.lockIcon;
        break;
      case 'orangeLockIcon':
        this.iconTypeClass = iconTypeCSS.orangeLockIcon;
        break;
      case 'searchIcon':
        this.iconTypeClass = iconTypeCSS.searchIcon;
        break;
      case 'cameraIcon':
        this.iconTypeClass = iconTypeCSS.cameraIcon;
        break;
      case 'redQuestionIcon':
        this.iconTypeClass = iconTypeCSS.redQuestionIcon;
        break;
      default:
        this.iconTypeClass = iconTypeCSS.redAlert;
    }
  }

}
