import { Component, Input, AfterContentChecked, ElementRef, ViewChild, isDevMode } from '@angular/core';

/**
 * @Component: Text Header
 * @Description: This component generates a text header (H1, H2, etc).
 */
@Component({
    selector: 'citi-text-header',
    template: require('./text-header.component.html'),
    styles: [ require("./text-header.component.scss") ]
})

export class TextHeaderComponent implements AfterContentChecked {

    // Get the content element
    @ViewChild("content") contentElement: ElementRef;

    // The level of the header
    headerLevel: Number;

    // The level of header whose style should be used
    styleLevel: Number;

    // The HTML to put inside of the header tag
    contentHtml: string;

    // Whether or not the header should be bold
    isBold: boolean;

    // Class string
    classString: string;

    ngAfterContentChecked(){

        // Get the innerHTML
        var innerHtml = this.contentElement.nativeElement.innerHTML.toString();

        // If we got anything back
        if ( innerHtml.length ){

            // Set it to display in the header tag
            this.contentHtml = innerHtml;
        }
    }

    /**
     * @Property: level
     * @Description: What level the header should be. This should be heirarchical to other headers in the document starting at h2.
     * @Type: number
     */
    @Input()
    set level( level: Number ){
        var _level: Number = parseInt(level.toString()) | 0;
        if (_level !== 0){
            this.headerLevel = level;
        } else {
            if (isDevMode){
                console.error("TEXT_HEADER: The value passed to level should be a number between 1 and 6")
            }
        }
    }

    /**
     * @Property: level
     * @Description: Number corresponding to the level of header whose style you want to use. Not heirarchical.
     * @Type: number
     */
    @Input()
    set style( level: Number ){
        var _level: Number = parseInt(level.toString()) | 0;
        if (_level !== 0){
            this.styleLevel = level;
        } else {
            if (isDevMode){
                console.error("TEXT_HEADER: The value passed to style should be a number between 1 and 6 and correspond to the header level whose style you want to use.")
            }
        }
    }

    /**
     * @Property: level
     * @Description: If the header should be bold.
     * @Type: Empty Attribute
     */
    @Input()
    set bold ( bold: any ){
        this.isBold = true;
    }

    /**
     * @Property: class
     * @Description: Adds the given string as a class to the text header
     * @Type: string
     */
    @Input()
    set class ( _class: string ){
        this.classString = _class;
    }
}