import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';

/**
 * @Component: Card Info
 * @Description: The card info module.
 */

@Component({
  selector: 'citi-card-info',
  template: require('./card-info.component.html'),
  styles: [ require('./card-info.component.css') ]
})
export class CardInfoComponent implements OnInit {

  /**
   * @Property: id
   * @Description: ID attribute of the outer element
   * @Type: String
   */
  @Input() id;

  /**
   * @Property: cardList
   * @Description: Array of objects containing info for each card
   * @Type: Array
   */
  @Input() cardList:Array<any>;

  /**
   * @Property: selectedIndex
   * @Description: Which card is initially visible (default is the first card, 0)
   * @Type: Number
   */
  @Input() selectedIndex;

  /**
   * @Property: readonly
   * @Description: Whether component only shows one card instead of offering a dropdown menu
   * @Type: Boolean
   */
  @Input() readonly;

  /**
   * @Property: showDetails
   * @Description: Whether component shows the selected card's details (balance, etc) 
   * @Type: Boolean
   */
  @Input() showDetails;

  /**
   * @Property: selectCardLabel
   * @Description: Label of card dropdown
   * @Type: String
   */
  @Input() selectCardLabel: String;

  /**
    * @Event: cardChanged
    * @Description: This event that is fired when a card is selected; returns the index of the card (first card is 0)
    * @Return: Number
    */
  @Output() cardChanged: EventEmitter<any> = new EventEmitter();

  private startCardIndex: number;
  public currentCard: Object;
  public currentCardDetails: Array<any>;

  constructor() { }

  ngOnInit() {
    this.startCardIndex = this.selectedIndex ? Number.parseInt(this.selectedIndex, 10) : 0;
    this.selectCard(this.startCardIndex);
  }

  selectCard(cardIndex: number) {
    this.currentCard = this.cardList[cardIndex];

    // Extract iteratable list of details: [{label:"", value:""}]
    this.currentCardDetails = [];
    for (let detailKey in this.cardList[cardIndex].details) {
      this.currentCardDetails.push(this.cardList[cardIndex].details[detailKey]);
    }

    // Event emitter
    this.cardChanged.emit(this.currentCard);
  }

}
