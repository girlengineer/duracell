import {Component, Input} from '@angular/core';

/**
 * @Component: Column
 * @Description: This is the column component and is used to leverage the grid
 * from Bootstrap.
*/
@Component({
    selector: 'citi-column',
    template: require('./column.component.html')
})
export class ColumnComponent{
    /**
     * @Property: xs 
     * @Description: This defines the grid behavior for the xs grid resolution
     * @Type: Number (1-12) 
    */
    @Input() xs: number;
    /**
     * @Property: sm 
     * @Description: This defines the grid behavior for the sm grid resolution
     * @Type: Number (1-12) 
    */
    @Input() sm: number;
    /**
     * @Property: md 
     * @Description: This defines the grid behavior for the md grid resolution
     * @Type: Number (1-12) 
    */
    @Input() md: number;
    /**
     * @Property: lg 
     * @Description: This defines the grid behavior for the lg grid resolution
     * @Type: Number (1-12) 
    */
    @Input() lg: number;
    /**
     * @Property: pullRight 
     * @Description: This will force the column to float right
     * @Type: Boolean
    */
    @Input() pullRight: boolean;
    /**
     * @Property: pullRight 
     * @Description: This will force the column to float left
     * @Type: Boolean
    */
    @Input() pullLeft: boolean;
    /**
     * @Property: offXs 
     * @Description: This defines the offset behavior for the xs grid resolution
     * @Type: Number (1-12) 
    */
    @Input() offXs: number;
    /**
     * @Property: offSm 
     * @Description: This defines the offset behavior for the sm grid resolution
     * @Type: Number (1-12) 
    */
    @Input() offSm: number;
    /**
     * @Property: offMd
     * @Description: This defines the offset behavior for the md grid resolution
     * @Type: Number (1-12) 
    */
    @Input() offMd: number;
    /**
     * @Property: offLg 
     * @Description: This defines the offset behavior for the lg grid resolution
     * @Type: Number (1-12) 
    */
    @Input() offLg: number;
    /**
     * @Property: classes
     * @Description: This adds classes to the mark-up for the column.
     * @Type: String
     */
    @Input() classes: string;

    columnClasses: string[] = [];

    ngOnInit(): void {
        this.xs ? this.columnClasses.push('col-xs-' + this.xs) : null;
        this.sm ? this.columnClasses.push('col-sm-' + this.sm) : null;
        this.md ? this.columnClasses.push('col-md-' + this.md) : null;
        this.lg ? this.columnClasses.push('col-lg-' + this.lg) : null;
        this.pullRight ? this.columnClasses.push('pull-right' + this.pullRight) : null;
        this.pullLeft ? this.columnClasses.push('pull-left' + this.pullLeft) : null;
        this.offXs ? this.columnClasses.push('col-xs-offset-' + this.offXs) : null;
        this.offSm ? this.columnClasses.push('col-sm-offset-' + this.offSm) : null;
        this.offMd ? this.columnClasses.push('col-md-offset-' + this.offMd) : null;
        this.offLg ? this.columnClasses.push('col-lg-offset-' + this.offLg) : null;
        this.classes ? this.columnClasses.push(this.classes) : null;
    }
}