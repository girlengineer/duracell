import { EventEmitter } from "@angular/core";

export class AccordionService {

    // Lets subscribers know that a section was added, and delivers a reference to the section added
    public sectionAdded: EventEmitter<any>;

    // Lets subscribers know a section was opened
    public sectionOpened: EventEmitter<any>;

    // Lets subscribers know a section was closed
    public sectionClosed: EventEmitter<any>;

    constructor(){

        // Instantiat event emitters
        this.sectionAdded = new EventEmitter;
        this.sectionOpened = new EventEmitter;
        this.sectionClosed = new EventEmitter;
    }

    // Used to add a section. Takes a section reference and passes it through the event.
    addSection: Function = function(section){
        this.sectionAdded.emit(section);
    }

    // Used to let the service know a section was opened
    openSection: Function = function(){
        this.sectionOpened.emit();
    }

    // Used to let the service know a section was closed
    closeSection: Function = function(){
        this.sectionClosed.emit();
    }
}