import { Component, Input, OnInit } from '@angular/core';
import { AccordionService } from "../accordion.service";

/**
 * @Component: Accordion
 * @Description: This component generates the wrapper, title, and expand/collapse
 * button for accordions. Sections for the accordion are a separate component.
 */
@Component({
  selector: 'citi-accordion',
  template: require('./accordion.component.html'),
  styles: [ require('./accordion.component.scss') ]
})
export class AccordionComponent implements OnInit {

  constructor(private service:AccordionService = new AccordionService){}

  // Holds all of the sections of the accordion
  sections: any[] = [];

  // Whether all sections are open
  allSectionsOpen: Boolean = false;

  // Toggle all sections open or closed
  toggleAllSections: Function = function(){

    // State to set the isOpen property of each section to
    var open: Boolean = this.allSectionsOpen ? false : true;

    // Toggle all sections
    for (var i=0, j=this.sections.length; i<j; i++){
      this.sections[i].isOpen = open;
    }

    // If all sections were opened
    if (open){

      // Let the component know all sections are open
      this.allSectionsOpen = true;
    } else {

      // Otherwise let it know all sections are not open
      this.allSectionsOpen = false;
    }
  };

  // Checks if all of the sections are open
  checkIfAllSectionsAreOpen: Function = function(){

    // If all of the sections are open
    var allSectionsOpen: Boolean = true;

    for (var i=0, j=this.sections.length; i<j; i++){

      // Check if the section is open
      !this.sections[i].isOpen ? allSectionsOpen = false : null;
    }

    // If all of the sections are open
    this.allSectionsOpen = allSectionsOpen;
  }

  // On Init
  ngOnInit() {

    // Subscribe to the sectionAdded event
    this.service.sectionAdded.subscribe( section => {

      // Push the new section to the sections array
      this.sections.push(section);
    });

    // Subscribe to the sectionOpened event
    this.service.sectionOpened.subscribe( () => {

      // Check if all sections are open
      this.checkIfAllSectionsAreOpen();
    })

    // Subscribe to the sectionClosed event
    this.service.sectionClosed.subscribe( () => {

      // Let the component know not all sections are open
      this.allSectionsOpen = false;
    })
  }

  /**
   * @Property: title
   * @Description: The title displayed at the top of the accordion
   * @Type: String
   */
  @Input() title: string;

  /**
   * @Property: theme
   * @Description: Default theme is light. The value "dark" can be passed to this input to use the dark theme.
   * @Type: String
   */
  @Input() theme: string;
}
