// App Imports
import { Injectable } from '@angular/core';
import { Headers, Http } from "@angular/http";
import {Observable} from 'rxjs/Observable';

// RXJS Imports
import 'rxjs/observable/of';
import 'rxjs/add/operator/share';
import 'rxjs/add/operator/map';

@Injectable()
export class BrandingService {

	// Constructor
    constructor(private http: Http) { }

	// Variables
	private data: any = null;
	private observable: Observable<any>;
	private headers = new Headers({"Content-Type": "application/json"});
	private url: string;

	// Returns the current URL being used by the service
	getCurrentUrl: Function = function(){
		return this.url || false;
	}

	// Returns data
    getData( url: string ) {

		// If we already have data
		if (this.data){

			// Return the data
			return Observable.of(this.
			data);
			
		} else if (this.observable){

			// Otherwise if we have an observable, return it
			return this.observable;
		} else {

			// // If there is a url provided
			if ( url || this.url ){

				// Get the url to be used
				this.url = url || this.url;

				// Otherwise get the data
				this.observable = this.http.get(this.url, {headers: this.headers})
				.map( response => {

					// Clear the observable
					this.observable = null;

					// If the call failed
					if (response.status == 400) {
						// Return false
						return false
					} else if (response.status == 200){
						// Otherwise set the data
						this.data = response.json().data;

						// And return the response
						return this.data
					}
				})
				.share();
			}

			// Return the observable to be subscribed to
			return this.observable;
		}
    }
}