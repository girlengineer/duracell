import {Component, Input} from '@angular/core';

/**
 * @Component: Header Butler Bar
 * @Description: This component generates the butler bar (black bar) section of the header.
 */
@Component({
    selector: 'citi-butler-bar',
    template: require('./butler.component.html'),
    styles: [ require("./butler.component.scss").toString() ]
})

export class ButlerBarComponent {

    // This variable will cover the actual DOM logic
    config: any;

    // This function takes the BrandingConfig object and translates it to config DOM
    // This step is not necessary, but keeps the DOM markup semantic and un-bloated
    // and keeps most of the logic in the controller instead of the view
    setButlerConfig = function(_config: any){

        // Set up config object to temporarily hold our calculated values
        var butlerConfig: any = {};

        // If there is a valid config and a header object is defined
        if ( _config && _config.header ){

            // If the butler bar should be shown
            if ( _config.header.butler 
                 && _config.header.butler.show
            ){

                // ...set it to display
                butlerConfig.showButlerBar = true;

                // If the navigationItems value is an array and has at least one item...
                if ( Array.isArray(_config.header.butler.navigationItems )
                        && _config.header.butler.navigationItems.length > 0
                ){
                    // ...tell the butler bar to display the menu...
                    butlerConfig.showButlerMenu = true;

                    // ...and provide the menu items to be displayed
                    butlerConfig.butlerMenuItems = _config.header.butler.navigationItems;
                }

                // If the search form should be displayed and we have all necessary values...
                if ( _config.header.butler.search
                     && _config.header.butler.search.show
                     && typeof _config.header.butler.search.action === "string"
                     && _config.header.butler.search.action.length > 0
                     && typeof _config.header.butler.search.placeholder === "string"
                     && _config.header.butler.search.placeholder.length > 0
                ){
                    // .. tell the butler bar to display the search box...
                    butlerConfig.showButlerSearch = true;

                    // ...and provide the necessary data
                    butlerConfig.butlerSearchAction = _config.header.butler.search.action;
                    butlerConfig.butlerSearchPlaceholder = _config.header.butler.search.placeholder;
                }
            }

            // Set the config for use by the dom (DOM will not show until this is set);
            this.config = butlerConfig;
        }
    }

    /**
     * @Property: brandingConfig
     * @Description: This is a reference to the branding config JSON object retrieved from the branding API.
     * @Type: String
     */
    @Input()
    set brandingConfig(_config: any){
        if (_config){
            this.setButlerConfig(_config);
        }
    }
}