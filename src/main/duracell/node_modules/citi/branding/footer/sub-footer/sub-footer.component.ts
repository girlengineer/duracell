import { Component, Input } from '@angular/core';

/**
 * @Component: Footer SubFooter
 * @Description: This component generates the footer section of the footer.
 */
@Component({
    selector: 'citi-sub-footer',
    template: require('./sub-footer.component.html'),
    styles: [ require("./sub-footer.component.scss") ]
})

export class SubFooterComponent {

    // This variable will cover the actual DOM logic
    config: any;

    // This function takes the BrandingConfig object and translates it to config DOM
    // This step is not necessary, but keeps the DOM markup semantic and un-bloated
    // and keeps most of the logic in the controller instead of the view
    setDisclaimerConfig = function( _config: any ){

        // Set up config object to temporarily hold our calculated values
        var subFooterConfig: any = {};

        // If there is a valid config and a footer object is defined
        if ( _config && _config.footer ){

            // If the butler bar should be shown
            if ( _config.footer.subFooter 
                 && _config.footer.subFooter.show
            ){

                // Set the sub-footer to show
                subFooterConfig.showSubFooter = true;

                // If the site version should be shown
                if ( _config.footer.subFooter.showVersion ){

                    // Set the version to show
                    subFooterConfig.showVersion = true;
                }

                // If the images should be shown
                if ( _config.footer.subFooter.images.show ){

                    // Set the images to show
                    subFooterConfig.showImages = true;

                    // If there is a fdic image url
                    if ( _config.footer.subFooter.images.fdic.url ){
                        
                        // Provide the fdic image url
                        subFooterConfig.fdicImageUrl = _config.footer.subFooter.images.fdic.url;
                    }

                    // If there is an equal housing image url
                    if ( _config.footer.subFooter.images.equalHousing.url ){

                        // Provide the equal housing image url
                        subFooterConfig.equalHousingImageUrl = _config.footer.subFooter.images.equalHousing.url;
                    }
                }
            }

            // Set the config for use by the dom (DOM will not show until this is set);
            this.config = subFooterConfig;
        }
    }

    /**
     * @Property: brandingConfig
     * @Description: This is a reference to the branding config JSON object retrieved from the branding API.
     * @Type: String
     */
    @Input()
    set brandingConfig( _config: any ){
        if ( _config ){
            this.setDisclaimerConfig( _config );
        }
    }
}