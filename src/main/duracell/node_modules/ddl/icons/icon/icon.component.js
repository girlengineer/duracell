"use strict";
var core_1 = require('@angular/core');
var icon_component_classes_1 = require('./icon.component.classes');
/**
 * @Component: Icon
 * @Section: Forms
 * @Description: This is the icon component and is used to create icon with message
 * from Bootstrap.
*/
var IconComponent = (function () {
    function IconComponent() {
        this.settings = new icon_component_classes_1.iconTypeClassSettings;
    }
    Object.defineProperty(IconComponent.prototype, "iconType", {
        /**
          * @Property: iconType
          * @Description: This defines the type of icon to be displayed.
          * @Type: string (ex: blueError, redError, blueAlert , redAlert etc.)
         */
        set: function (iconType) {
            this.settings.iconType = iconType;
        },
        enumerable: true,
        configurable: true
    });
    IconComponent.prototype.ngOnInit = function () {
        switch (this.settings.iconType) {
            case 'blueError':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.blueError;
                break;
            case 'redError':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.redError;
                break;
            case 'blueAlert':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.blueAlert;
                break;
            case 'redAlert':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.redAlert;
                break;
            case 'blueStar':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.blueStar;
                break;
            case 'closeIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.closeIcon;
                break;
            case 'redCloseIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.redCloseIcon;
                break;
            case 'refreshIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.refreshIcon;
                break;
            case 'checkIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.checkIcon;
                break;
            case 'plusIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.plusIcon;
                break;
            case 'MinusIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.MinusIcon;
                break;
            case 'profileIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.profileIcon;
                break;
            case 'lockIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.lockIcon;
                break;
            case 'orangeLockIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.orangeLockIcon;
                break;
            case 'searchIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.searchIcon;
                break;
            case 'cameraIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.cameraIcon;
                break;
            case 'redQuestionIcon':
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.redQuestionIcon;
                break;
            default:
                this.iconTypeClass = icon_component_classes_1.iconTypeCSS.redAlert;
        }
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], IconComponent.prototype, "idStr", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], IconComponent.prototype, "iconTextMessage", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], IconComponent.prototype, "isSROnly", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], IconComponent.prototype, "iconType", null);
    IconComponent = __decorate([
        core_1.Component({
            selector: 'citi-icon',
            template: require('./icon.component.html'),
            styles: [require('./icon.component.css')]
        }), 
        __metadata('design:paramtypes', [])
    ], IconComponent);
    return IconComponent;
}());
exports.IconComponent = IconComponent;
//# sourceMappingURL=icon.component.js.map