import { OnInit, EventEmitter, ElementRef } from '@angular/core';
import { ModalSettings } from "./modal.component.settings";
/**
 * @Component: Modal
 * @Description: This component generates a modal
 */
export declare class ModalComponent implements OnInit {
    modal: ElementRef;
    closeButton: ElementRef;
    primaryButton: any;
    secondaryButton: any;
    openButton: Element;
    settings: ModalSettings;
    ngOnInit(): void;
    toggleModal: (show: Boolean) => void;
    /**
     * @Property: show
     * @Description: Whether the modal should be open or not
     * @Type: boolean
     */
    show: boolean;
    showChange: EventEmitter<{}>;
    /**
     * @Property: title
     * @Description: the title text for the modal
     * @Type: string
     */
    title: string;
    /**
     * @Property: primaryButtonUrl
     * @Description: The url for the primary button
     * @Type: string
     */
    primaryButtonUrl: string;
    /**
     * @Property: primaryButtonTarget
     * @Description: The target for the primary button
     * @Type: string
     */
    primaryButtonTarget: "_blank" | "_self";
    /**
     * @Property: primaryButtonText
     * @Description: The value (display text) of the primary button
     * @Type: string
     */
    primaryButtonText: string;
    /**
     * @Property: showCancelButton
     * @Description: Whether or not the cancel button should be shown
     * @Type: boolean
     */
    showCancelButton: "true" | "false" | boolean;
    /**
     * @Property: cancelButtonText
     * @Description: The value (display text) for the cancel button
     * @Type: string
     */
    cancelButtonText: string;
    /**
     * @Property: primaryButtonClick
     * @Description: A callback function for when the primary button is cleaned.
     * Call like ([primaryButtonClick]="myFunction").
     * Do not add parenthesis.
     * @Type: string
     */
    primaryButtonClick: Function;
    onEscape(event: any): void;
}
