"use strict";
var core_1 = require('@angular/core');
var utils_class_1 = require('../../utils.class');
var form_container_component_1 = require('../../../forms/form-container/form-container.component');
/**
 * @Component: Footer Navigation
 * @Section: Navigation
 * @Description: This component generates the navigation and location finder section of the footer.
 */
var FooterNavigationComponent = (function () {
    function FooterNavigationComponent(utils, element) {
        this.utils = utils;
        this.element = element;
        // Array that holds if a section should be open or not
        this.sections = [];
        // Toggles a section to be open or not
        this.toggleSection = function (index) {
            this.sections[index] = !this.sections[index];
        };
        // Gets the window dimensions and sets isMobile
        this.getMobile = function () {
            var width = window.innerWidth;
            if (width <= 990) {
                this.isMobile = true;
            }
            else {
                this.isMobile = false;
            }
        };
        this.submitLocationFinder = function () {
            console.log('BOB@!');
            this.locationFinder.submit();
        };
        // This function takes the BrandingConfig object and translates it to config DOM
        // This step is not necessary, but keeps the DOM markup semantic and un-bloated
        // and keeps most of the logic in the controller instead of the view
        this.setNavigationConfig = function (_config) {
            // Set up config object to temporarily hold our calculated values
            var navigationConfig = {};
            // If there is a valid config and a footer object is defined
            if (_config && _config.footer) {
                // If the butler bar should be shown
                if (_config.footer.navigation
                    && _config.footer.navigation.show) {
                    // If there is a footer navigation sections array and it has at least one section
                    if (_config.footer.navigation.sections && _config.footer.navigation.sections.length) {
                        // Provide the sections to the config object
                        navigationConfig.sections = _config.footer.navigation.sections;
                    }
                }
                // If the butler bar should be shown
                if (_config.footer.locationFinder
                    && _config.footer.locationFinder.show) {
                    if (_config.footer.locationFinder.action && _config.footer.locationFinder.placeholder) {
                        navigationConfig.show = true;
                        navigationConfig.action = _config.footer.locationFinder.action;
                        navigationConfig.placeholder = _config.footer.locationFinder.placeholder;
                    }
                }
                // Set the config for use by the dom (DOM will not show until this is set);
                this.config = navigationConfig;
            }
        };
    }
    ;
    // On init
    FooterNavigationComponent.prototype.ngOnInit = function () {
        var _this = this;
        // Bind to window resize to set isMobile
        window.onresize = function (e) {
            _this.getMobile();
        };
        // Get initial ismobile
        this.getMobile();
        setTimeout(function () {
            _this.locationFinder = _this.formContainer.toArray()[0].form.nativeElement;
        }, 500);
        // this.locationFinder = this.locationFinder.nativeElement.getElementsByTagName('form')[0];
    };
    Object.defineProperty(FooterNavigationComponent.prototype, "brandingConfig", {
        /**
         * @Property: brandingConfig
         * @Description: This is a reference to the branding config JSON object retrieved from the branding API.
         * @Type: String
         */
        set: function (_config) {
            if (_config) {
                this.setNavigationConfig(_config);
            }
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.ViewChildren(form_container_component_1.FormContainerComponent), 
        __metadata('design:type', core_1.QueryList)
    ], FooterNavigationComponent.prototype, "formContainer", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], FooterNavigationComponent.prototype, "brandingConfig", null);
    FooterNavigationComponent = __decorate([
        core_1.Component({
            selector: 'citi-footer-navigation',
            template: require('./navigation.component.html'),
            styles: [require('./navigation.component.scss')],
            providers: [utils_class_1.Utils]
        }), 
        __metadata('design:paramtypes', [utils_class_1.Utils, core_1.ElementRef])
    ], FooterNavigationComponent);
    return FooterNavigationComponent;
}());
exports.FooterNavigationComponent = FooterNavigationComponent;
//# sourceMappingURL=navigation.component.js.map