import { ElementRef, OnInit, EventEmitter } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { DatePickerOptions, DateModel } from '../classes/';
import * as moment from 'moment';
import { ValidationService } from "../../../../../utility/services/validation.service";
export declare const CALENDAR_VALUE_ACCESSOR: any;
export declare class DatePickerComponent implements ControlValueAccessor, OnInit {
    private el;
    private validationService;
    input: ElementRef;
    options: DatePickerOptions;
    inputEvents: EventEmitter<{
        type: string;
        data: string;
    }>;
    viewFormat: string;
    prePopulateDate: string;
    outputEvents: EventEmitter<{
        type: string;
        data: string;
    }>;
    inputName: string;
    required: boolean;
    errorMessage: string;
    error: boolean;
    requiredError: string;
    idStr: string;
    label: string;
    private isRequired;
    inputClasses: any;
    date: DateModel;
    private opened;
    private currentDate;
    private days;
    private years;
    private yearPicker;
    private scrollOptions;
    private minDate;
    private maxDate;
    private onTouchedCallback;
    private onChangeCallback;
    labelId: string;
    constructor(el: ElementRef, validationService: ValidationService);
    value: DateModel;
    errors: any;
    toggleError: Function;
    validate: Function;
    onBlur: Function;
    ngOnInit(): void;
    generateCalendar(): void;
    inputChange(event: any): void;
    selectDate(e: MouseEvent, date: moment.Moment): void;
    selectYear(e: MouseEvent, year: number): void;
    generateYears(): void;
    writeValue(date: DateModel): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    prevMonth(): void;
    nextMonth(): void;
    today(): void;
    toggle(): void;
    open(): void;
    close(): void;
    onOpen(): void;
    openYearPicker(): void;
}
