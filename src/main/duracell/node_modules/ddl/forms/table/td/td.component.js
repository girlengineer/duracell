"use strict";
var core_1 = require('@angular/core');
var td_component_props_1 = require('./td.component.props');
var utility_classes_1 = require('../../../utility/utility.classes');
var TdComponent = (function () {
    function TdComponent(parentElment) {
        this.props = new td_component_props_1.TdProperties();
        this.parentElment = parentElment;
    }
    Object.defineProperty(TdComponent.prototype, "type", {
        set: function (props) {
            this.props = props;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "id", {
        set: function (id) {
            this.props.id = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "text", {
        set: function (text) {
            this.props.text = text;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "additionalClasses", {
        set: function (additionalClasses) {
            this.props.additionalClasses = additionalClasses;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "isRightAligned", {
        set: function (isRightAligned) {
            this.props.isRightAligned = isRightAligned;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "isChoiceColumn", {
        set: function (isChoiceColumn) {
            this.props.isChoiceColumn = isChoiceColumn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "isNoWrap", {
        set: function (isNoWrap) {
            this.props.isNoWrap = isNoWrap;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "colspan", {
        set: function (colspan) {
            this.props.colspan = colspan;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TdComponent.prototype, "statusAlert", {
        set: function (statusAlert) {
            this.props.statusAlert = statusAlert;
        },
        enumerable: true,
        configurable: true
    });
    TdComponent.prototype.generateClass = function () {
        var _this = this;
        this.parentElment.nativeElement.className = "";
        var cl = "cbolui-table-tablebody-col" + this.props.isRightAligned ? ' cbolui-table-rightAlign' : '' + this.props.isChoiceColumn ? ' cbolui-table-tablebody-col-choice' : '' + this.props.isNoWrap ? ' cbolui-nowrap' : '' + this.props.statusAlert == 'success' ? ' cbolui-success' : this.props.statusAlert == 'error' ? ' cbolui-error' : '' + this.props.additionalClasses ? ' props.additionalClasses' : '';
        //JavascriptMethods.addClass(this.parentElment.nativeElement, cl);
        if (this.props.isNoWrap === true) {
            cl += ' nowrap-content';
        }
        cl.trim().split(' ').forEach(function (cla) {
            utility_classes_1.JavascriptMethods.addClass(_this.parentElment.nativeElement, cla.trim());
        });
        this.parentElment.nativeElement.setAttribute('colspan', this.props.colspan);
        this.parentElment.nativeElement.id = this.props.id;
    };
    TdComponent.prototype.ngOnInit = function () {
    };
    TdComponent.prototype.ngAfterViewInit = function () {
        this.generateClass();
    };
    TdComponent.prototype.ngOnChanges = function (changes) {
        if (changes.hasOwnProperty('isRightAligned') || changes.hasOwnProperty('isChoiceColumn') || changes.hasOwnProperty('additionalClasses') || changes.hasOwnProperty('isNoWrap') || changes.hasOwnProperty('statusAlert')) {
            this.generateClass();
        }
    };
    __decorate([
        core_1.ViewChild('wrapperTd'), 
        __metadata('design:type', core_1.ElementRef)
    ], TdComponent.prototype, "wrapper", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', td_component_props_1.TdProperties), 
        __metadata('design:paramtypes', [td_component_props_1.TdProperties])
    ], TdComponent.prototype, "type", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], TdComponent.prototype, "id", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], TdComponent.prototype, "text", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], TdComponent.prototype, "additionalClasses", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], TdComponent.prototype, "isRightAligned", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], TdComponent.prototype, "isChoiceColumn", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], TdComponent.prototype, "isNoWrap", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], TdComponent.prototype, "colspan", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], TdComponent.prototype, "statusAlert", null);
    TdComponent = __decorate([
        core_1.Component({
            selector: '[citi-td]',
            template: require('./td.component.html')
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef])
    ], TdComponent);
    return TdComponent;
}());
exports.TdComponent = TdComponent;
//# sourceMappingURL=td.component.js.map