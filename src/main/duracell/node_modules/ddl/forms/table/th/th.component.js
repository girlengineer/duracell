"use strict";
var core_1 = require('@angular/core');
var th_component_props_1 = require('./th.component.props');
var utility_classes_1 = require('../../../utility/utility.classes');
var ThComponent = (function () {
    function ThComponent(parentElment) {
        this.props = new th_component_props_1.ThProperties();
        this.cardChanged = new core_1.EventEmitter();
        this.parentElment = parentElment;
    }
    Object.defineProperty(ThComponent.prototype, "type", {
        set: function (props) {
            this.props = props;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "id", {
        set: function (id) {
            this.props.id = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "text", {
        get: function () {
            return this.props.text;
        },
        set: function (text) {
            this.props.text = text;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "additionalClasses", {
        set: function (additionalClasses) {
            this.props.additionalClasses = additionalClasses;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "isRightAligned", {
        set: function (isRightAligned) {
            this.props.isRightAligned = isRightAligned;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "isChoiceColumn", {
        set: function (isChoiceColumn) {
            this.props.isChoiceColumn = isChoiceColumn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "isSorterFalse", {
        set: function (isSorterFalse) {
            this.props.isSorterFalse = isSorterFalse;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "dataSortType", {
        set: function (dataSortType) {
            this.props.dataSortType = dataSortType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThComponent.prototype, "isSortable", {
        get: function () {
            return this.props.isSortable;
        },
        set: function (isSortable) {
            this.props.isSortable = isSortable;
        },
        enumerable: true,
        configurable: true
    });
    ThComponent.prototype.generateClass = function () {
        var _this = this;
        this.parentElment.nativeElement.className = '';
        var cls = '';
        cls += this.props.isRightAligned ? ' cbolui-table-rightAlign' : '';
        cls += (this.isSortable) ? ' sortable cM-extend' : ' sorter-false';
        cls += this.props.isChoiceColumn ? ' cbolui-table-tableheader-col-choice' : '';
        cls += this.props.additionalClasses ? this.props.additionalClasses : '';
        cls.trim().split(' ').forEach(function (cla) {
            utility_classes_1.JavascriptMethods.addClass(_this.parentElment.nativeElement, cla);
        });
        this.parentElment.nativeElement.setAttribute('scope', 'col');
        this.parentElment.nativeElement.setAttribute('tabindex', this.props.isSortable && this.props.isSorterFalse ? '0' : null);
        this.parentElment.nativeElement.setAttribute('aria-sort', 'none');
        this.parentElment.nativeElement.setAttribute('data-sort', this.props.dataSortType);
        this.parentElment.nativeElement.id = this.props.id;
    };
    ThComponent.prototype.ngOnInit = function () {
    };
    ThComponent.prototype.ngAfterViewInit = function () {
        this.generateClass();
    };
    ThComponent.prototype.onclick = function () {
        this.cardChanged.emit();
    };
    ThComponent.prototype.ngOnChanges = function (changes) {
        if (changes.hasOwnProperty('isRightAligned') || changes.hasOwnProperty('isChoiceColumn')
            || changes.hasOwnProperty('additionalClasses') || changes.hasOwnProperty('isSortable')
            || changes.hasOwnProperty('isSorterFalse') || changes.hasOwnProperty('isChoiceColumn')
            || changes.hasOwnProperty('dataSortType')) {
            this.generateClass();
        }
    };
    __decorate([
        core_1.ViewChild('wrapperTh'), 
        __metadata('design:type', core_1.ElementRef)
    ], ThComponent.prototype, "wrapper", void 0);
    __decorate([
        core_1.Output('click'), 
        __metadata('design:type', core_1.EventEmitter)
    ], ThComponent.prototype, "cardChanged", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', th_component_props_1.ThProperties), 
        __metadata('design:paramtypes', [th_component_props_1.ThProperties])
    ], ThComponent.prototype, "type", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], ThComponent.prototype, "id", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], ThComponent.prototype, "text", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], ThComponent.prototype, "additionalClasses", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], ThComponent.prototype, "isRightAligned", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], ThComponent.prototype, "isChoiceColumn", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], ThComponent.prototype, "isSorterFalse", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String), 
        __metadata('design:paramtypes', [String])
    ], ThComponent.prototype, "dataSortType", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], ThComponent.prototype, "isSortable", null);
    ThComponent = __decorate([
        core_1.Component({
            selector: '[citi-th]',
            template: require('./th.component.html')
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef])
    ], ThComponent);
    return ThComponent;
}());
exports.ThComponent = ThComponent;
//# sourceMappingURL=th.component.js.map