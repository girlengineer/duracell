"use strict";
var InputSettings = (function () {
    function InputSettings() {
        this.type = 'text';
        this.size = 'large';
        this.mask = 'none';
        this.pipe = 'none';
    }
    return InputSettings;
}());
exports.InputSettings = InputSettings;
var InputCss = (function () {
    function InputCss() {
    }
    Object.defineProperty(InputCss, "Large", {
        get: function () { return 'col-md-8 col-sm-12'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputCss, "Medium", {
        get: function () { return 'col-md-6 col-sm-9 col-xs-12'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputCss, "Small", {
        get: function () { return 'col-md-4 col-sm-6 col-xs-12'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputCss, "Success", {
        get: function () { return 'validation-input-success'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputCss, "InputGroup", {
        get: function () { return 'input-group'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputCss, "InputGroupFocus", {
        get: function () { return 'focus-group'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputCss, "TextRight", {
        get: function () { return 'text-right'; },
        enumerable: true,
        configurable: true
    });
    return InputCss;
}());
exports.InputCss = InputCss;
var InputSize = (function () {
    function InputSize() {
    }
    Object.defineProperty(InputSize, "Large", {
        get: function () { return 'large'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputSize, "Medium", {
        get: function () { return 'medium'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputSize, "Small", {
        get: function () { return 'small'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputSize, "XSmall", {
        get: function () { return 'xsmall'; },
        enumerable: true,
        configurable: true
    });
    return InputSize;
}());
exports.InputSize = InputSize;
var InputType = (function () {
    function InputType() {
    }
    Object.defineProperty(InputType, "Standard", {
        get: function () { return 'standard'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "Tooltip", {
        get: function () { return 'tooltip'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "FinAddOn", {
        get: function () { return 'finAddOn'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "Password", {
        get: function () { return 'password'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "SimpleDate", {
        get: function () { return 'simpleDate'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "Email", {
        get: function () { return 'email'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "Url", {
        get: function () { return 'url'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "PhoneNumber", {
        get: function () { return 'phoneNumber'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "ReadOnly", {
        get: function () { return 'readOnly'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(InputType, "Error", {
        get: function () { return 'error'; },
        enumerable: true,
        configurable: true
    });
    return InputType;
}());
exports.InputType = InputType;
var TooltipInput = (function () {
    function TooltipInput() {
    }
    Object.defineProperty(TooltipInput, "InputCss", {
        get: function () { return ''; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TooltipInput, "PlacementTop", {
        get: function () { return 'auto top'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TooltipInput, "PlacementBot", {
        get: function () { return 'auto bottom'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TooltipInput, "InputGroupCss", {
        get: function () { return 'tooltip-input-group'; },
        enumerable: true,
        configurable: true
    });
    return TooltipInput;
}());
exports.TooltipInput = TooltipInput;
var FinAddOnInput = (function () {
    function FinAddOnInput() {
    }
    Object.defineProperty(FinAddOnInput, "Step", {
        get: function () { return 1; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinAddOnInput, "Min", {
        get: function () { return 0; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinAddOnInput, "TypeDollar", {
        get: function () { return '$'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinAddOnInput, "TypeRUB", {
        get: function () { return 'RUB'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FinAddOnInput, "InputGroupCss", {
        get: function () { return 'input-group focus-group'; },
        enumerable: true,
        configurable: true
    });
    return FinAddOnInput;
}());
exports.FinAddOnInput = FinAddOnInput;
var PasswordInput = (function () {
    function PasswordInput() {
    }
    Object.defineProperty(PasswordInput, "InputCss", {
        get: function () { return 'text-input-container'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "MaxLength", {
        get: function () { return 10; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "Type", {
        get: function () { return 'password'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "LargeRules", {
        get: function () { return 'no-spaces min-max-8-10 has-letter has-number'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "MediumRules", {
        get: function () { return 'hasspecialcharacter no-consecutive-3 no-spaces min-max-8-10 has-letter has-number'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "SmallRules", {
        get: function () { return 'min-max-6-25'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "XSmallRules", {
        get: function () { return 'no-consecutive no-special-characters has-letter has-number'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "PlacementTop", {
        get: function () { return 'top auto'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "SuccessMsg", {
        get: function () { return 'Your password meets all tested requirements'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PasswordInput, "FailMsg", {
        get: function () { return 'Your password doesn&#39;t meet the requirements below'; },
        enumerable: true,
        configurable: true
    });
    return PasswordInput;
}());
exports.PasswordInput = PasswordInput;
var SimpleDateInput = (function () {
    function SimpleDateInput() {
    }
    Object.defineProperty(SimpleDateInput, "RowCss", {
        get: function () { return 'cbolui-input-box'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "Type", {
        get: function () { return 'text'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "InputCss", {
        get: function () { return 'dateinput-simple form-control formatted'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "Label1", {
        get: function () { return 'Date (dd/mm/yyyy)'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "Placeholder1", {
        get: function () { return 'Date dd/mm/yyyy'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "Format1", {
        get: function () { return 'dd/mm/yyyy'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "AddFormat1", {
        get: function () { return 'dd/mm/y|dd-mm-y|dd-mm-yy'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "Label2", {
        get: function () { return 'Date (mm/dd/yy)'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "Placeholder2", {
        get: function () { return 'Date mm/dd/yy'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleDateInput, "Format2", {
        get: function () { return 'mm/dd/yy'; },
        enumerable: true,
        configurable: true
    });
    return SimpleDateInput;
}());
exports.SimpleDateInput = SimpleDateInput;
var EmailInput = (function () {
    function EmailInput() {
    }
    Object.defineProperty(EmailInput, "Type", {
        get: function () { return 'email'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EmailInput, "InputCss", {
        get: function () { return 'formatted'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EmailInput, "Label", {
        get: function () { return 'Email Address (name@email.com)'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EmailInput, "Placeholder", {
        get: function () { return 'Email Address'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EmailInput, "Format", {
        get: function () { return 'name@email.com'; },
        enumerable: true,
        configurable: true
    });
    return EmailInput;
}());
exports.EmailInput = EmailInput;
var UrlInput = (function () {
    function UrlInput() {
    }
    Object.defineProperty(UrlInput, "Type", {
        get: function () { return 'url'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UrlInput, "InputCss", {
        get: function () { return 'formatted'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UrlInput, "Label", {
        get: function () { return 'URL (http://www.google.com)'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UrlInput, "Placeholder", {
        get: function () { return 'URL'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(UrlInput, "Format", {
        get: function () { return 'http://www.google.com'; },
        enumerable: true,
        configurable: true
    });
    return UrlInput;
}());
exports.UrlInput = UrlInput;
var PhoneInput = (function () {
    function PhoneInput() {
    }
    Object.defineProperty(PhoneInput, "Type", {
        get: function () { return 'tel'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PhoneInput, "InputCss", {
        get: function () { return 'formatted'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PhoneInput, "Label", {
        get: function () { return 'Telephone Number'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PhoneInput, "Placeholder", {
        get: function () { return 'Telephone Number'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PhoneInput, "Format", {
        get: function () { return '416 673 5275'; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PhoneInput, "MaxLength", {
        get: function () { return 16; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PhoneInput, "FormatEnforcement", {
        get: function () { return '[\d ]'; },
        enumerable: true,
        configurable: true
    });
    return PhoneInput;
}());
exports.PhoneInput = PhoneInput;
var ReadOnlyInput = (function () {
    function ReadOnlyInput() {
    }
    Object.defineProperty(ReadOnlyInput, "InputCss", {
        get: function () { return 'read-only'; },
        enumerable: true,
        configurable: true
    });
    return ReadOnlyInput;
}());
exports.ReadOnlyInput = ReadOnlyInput;
var ErrorInput = (function () {
    function ErrorInput() {
    }
    Object.defineProperty(ErrorInput, "InputCss", {
        get: function () { return 'validation-input-danger'; },
        enumerable: true,
        configurable: true
    });
    return ErrorInput;
}());
exports.ErrorInput = ErrorInput;
//# sourceMappingURL=input.component.classes.js.map