"use strict";
var core_1 = require('@angular/core');
var dropdown_service_1 = require("../dropdown-service/dropdown.service");
/**
 * @Component: Dropdown Option
 * @Section: Forms
 * @Description: used to create an option inside a citi-dropdown component
 * from Bootstrap.
*/
var DropdownOptionComponent = (function () {
    // Constructor 
    function DropdownOptionComponent(dropdownService) {
        this.dropdownService = dropdownService;
        // Whether this option is disabled or not
        this.isDisabled = false;
        // Whether this option is selected or not
        this.isSelected = false;
    }
    // On Init
    DropdownOptionComponent.prototype.ngOnInit = function () {
        this.dropdownService.addOption(this);
    };
    Object.defineProperty(DropdownOptionComponent.prototype, "selected", {
        /**
         * @Property: selected
        * @Description: whether the dropdown option is selected or not
        * @Type: boolean
        */
        set: function (selected) {
            if (selected == true || selected == "true") {
                this.isSelected = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropdownOptionComponent.prototype, "disabled", {
        /**
         * @Property: disabled
        * @Description: whether the dropdown option is disabled or not
        * @Type: boolean
        */
        set: function (disabled) {
            if (disabled == true || disabled == "true") {
                this.isDisabled = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], DropdownOptionComponent.prototype, "value", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], DropdownOptionComponent.prototype, "label", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], DropdownOptionComponent.prototype, "selected", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], DropdownOptionComponent.prototype, "disabled", null);
    DropdownOptionComponent = __decorate([
        core_1.Component({
            selector: 'citi-dropdown-option',
            template: ""
        }), 
        __metadata('design:paramtypes', [dropdown_service_1.DropdownService])
    ], DropdownOptionComponent);
    return DropdownOptionComponent;
}());
exports.DropdownOptionComponent = DropdownOptionComponent;
//# sourceMappingURL=dropdown-option.component.js.map