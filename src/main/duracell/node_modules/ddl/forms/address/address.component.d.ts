import { OnInit } from '@angular/core';
/**
 * @Component: Address
 * @Section: Forms
 * @Description: This is the address component and is used to create reusable address
 * from Bootstrap.
*/
export declare class AddressComponent implements OnInit {
    private isHeaderTextRequired;
    /**
      * @Property: idStr
      * @Description: This defines the id of the address component
      * @Type: string
     */
    idStr: string;
    /**
      * @Property: headerText
      * @Description: This defines the title of the address component
      * @Type: string
     */
    headerText: string;
    /**
      * @Property: streetLabel
      * @Description: This defines the street label of the address component
      * @Type: string
     */
    streetLabel: string;
    /**
      * @Property: aptLabel
      * @Description: This defines the apt label of the address component
      * @Type: string
     */
    aptLabel: string;
    /**
      * @Property: cityLabel
      * @Description: This defines the city label of the address component
      * @Type: string
     */
    cityLabel: string;
    /**
      * @Property: stateLabel
      * @Description: This defines the state label of the address component
      * @Type: string
     */
    stateLabel: string;
    /**
      * @Property: zipCodeLabel
      * @Description: This defines the zip code label of the address component
      * @Type: string
     */
    zipCodeLabel: string;
    /**
      * @Property: homePhoneNoLabel
      * @Description: This defines the home phone label of the address component
      * @Type: string
     */
    homePhoneNoLabel: string;
    /**
      * @Property: workPhoneNoLabel
      * @Description: This defines the work phone label of the address component
      * @Type: string
     */
    workPhoneNoLabel: string;
    /**
      * @Property: stateList
      * @Description: This defines the state list of the address component
      * @Type: Object (//format will be {"key":"value"},{})
     */
    stateList: Object;
    /**
      * @Property: isStreetHidden
      * @Description: This defines to hide the street field
      * @Type: boolean
     */
    isStreetHidden: boolean;
    /**
      * @Property: isAptHidden
      * @Description: This defines to hide the apt field
      * @Type: boolean
     */
    isAptHidden: boolean;
    /**
      * @Property: isCityHidden
      * @Description: This defines to hide the city field
      * @Type: boolean
     */
    isCityHidden: boolean;
    /**
     * @Property: isStateHidden
     * @Description: This defines to hide the state field
     * @Type: boolean
    */
    isStateHidden: boolean;
    /**
      * @Property: isZipcodeHidden
      * @Description: This defines to hide the zipcode field
      * @Type: boolean
     */
    isZipcodeHidden: boolean;
    /**
      * @Property: isHomePhoneHidden
      * @Description: This defines to hide the home phone field
      * @Type: boolean
     */
    isHomePhoneHidden: boolean;
    /**
      * @Property: isWorkPhoneHidden
      * @Description: This defines to hide the work home field
      * @Type: boolean
     */
    isWorkPhoneHidden: boolean;
    /**
      * @Property: streetValue
      * @Description: This defines the street value
      * @Type: boolean
     */
    streetValue: string;
    /**
      * @Property: aptValue
      * @Description: This defines the apt value
      * @Type: boolean
     */
    aptValue: string;
    /**
      * @Property: cityValue
      * @Description: This defines the city value
      * @Type: boolean
     */
    cityValue: string;
    /**
      * @Property: stateValue
      * @Description: This defines the state value
      * @Type: boolean
     */
    stateValue: string;
    /**
      * @Property: zipcodeValue
      * @Description: This defines the zip cide value
      * @Type: boolean
     */
    zipcodeValue: string;
    /**
      * @Property: homephoneValue
      * @Description: This defines the home phone value
      * @Type: boolean
     */
    homephoneValue: string;
    /**
      * @Property: workphoneValue
      * @Description: This defines the work phone value
      * @Type: boolean
     */
    workphoneValue: string;
    constructor();
    ngOnInit(): void;
}
