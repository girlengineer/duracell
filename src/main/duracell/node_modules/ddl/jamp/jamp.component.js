"use strict";
var core_1 = require('@angular/core');
/**
 * @Component: JAMP
 * @Description: This component generates a JAMP (Just A Moment Please) element that can be shown during loading
 */
var JampComponent = (function () {
    function JampComponent() {
        // Set classes on host <citi-jamp> tag
        this.isHidden = true;
        this.isPageLevel = false;
        this.jampCssClass = "";
        this.loadingClass = "";
    }
    JampComponent.prototype.ngOnInit = function () {
        if (!this.useGif) {
            this.jampCssClass = "jamp-css";
            this.loadingClass = "loading";
        }
        if (this.visible) {
            this.isHidden = false;
        }
        if (this.pagelevel) {
            this.isPageLevel = true;
        }
    };
    /**
      * @Function: show
      * @Description: Makes the JAMP visible.
      * @Return: Void
      */
    JampComponent.prototype.show = function () {
        this.isHidden = false;
    };
    /**
      * @Function: show
      * @Description: Makes the JAMP hidden.
      * @Return: Void
      */
    JampComponent.prototype.hide = function () {
        this.isHidden = true;
    };
    __decorate([
        core_1.HostBinding('class.hidden'), 
        __metadata('design:type', Object)
    ], JampComponent.prototype, "isHidden", void 0);
    __decorate([
        core_1.HostBinding('class.jamp-page-level'), 
        __metadata('design:type', Object)
    ], JampComponent.prototype, "isPageLevel", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], JampComponent.prototype, "useGif", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], JampComponent.prototype, "visible", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], JampComponent.prototype, "pagelevel", void 0);
    JampComponent = __decorate([
        core_1.Component({
            selector: 'citi-jamp',
            template: require('./jamp.component.html'),
            styles: [require('./jamp.component.css')]
        }), 
        __metadata('design:paramtypes', [])
    ], JampComponent);
    return JampComponent;
}());
exports.JampComponent = JampComponent;
//# sourceMappingURL=jamp.component.js.map