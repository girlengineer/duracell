import { EventEmitter, ElementRef } from '@angular/core';
import { CTASettings } from "./cta.component.settings";
/**
 * @Component: Click to Action
 * @Section: ButtonsLinksLists
 * @Description: This component generates citi related click to actions like links, buttons, and their
 * various states.
 */
export declare class CTAComponent {
    button: ElementRef;
    settings: CTASettings;
    buttonClasses: any;
    updateSettings: Function;
    /**
     * @Property: bold
     * @Description: Makes the CTA bold.
     * @Type: Empty Attribute
     */
    bold: any;
    /**
     * @Property: target
     * @Description: The value of the target attribute for the CTA.
     * @Type: String
     */
    target: string;
    /**
     * @Property: href
     * @Description: The value of the href attribute for the CTA.
     * @Type: String
     */
    href: string;
    /**
     * @Property: value
     * @Description: The text value of the CTA.
     * @Type: String
     */
    value: string;
    /**
     * @Property: disabled
     * @Description: Shows the disabled state of the CTA
     * @Type: Boolean
     * @Two-way: true
     */
    disabled: String | Boolean;
    disabledChange: EventEmitter<{}>;
    /**
     * @Property: type
     * @Description: Determines the type of CTA to be displayed.  Valid options include
     * primary, secondary, tertiary, or icon.
     * @Type: String
     */
    type: string;
    /**
     * @Property: size
     * @Description: Determines the size of CTA to be displayed.  Valid options include
     * large and small.  Can only be applied to primary buttons.
     * @Type: String
     */
    size: string;
    /**
     * @Property: arrow
     * @Description: Determines whether the CTA should have an arrow or not.  Valid options
     * include left or right.  Arrows can only be given to primary buttons and buttons that are not small.
     * @Type: String
     */
    arrow: string;
    /**
     * @Property: buttonType
     * @Description: This is the type property for the button
     * @Type: String
     */
    buttonType: string;
    /**
     * @Property: routerLink
     * @Description: Defines a router link to navigate to SPA pages
     * @Type: String
     */
    routerLink: string;
}
