"use strict";
var core_1 = require('@angular/core');
var left_nav_parent_component_1 = require('../left-navigation-parent/left-nav-parent.component');
/**
 * @Component: Left Nav
 * @Section: Navigation
 * @Description: This is the left navigation component which is used to create the left navigation
 * menu that consumes JSON object.
*/
var LeftnavComponent = (function () {
    function LeftnavComponent() {
        this.selectedIndex = null;
    }
    Object.defineProperty(LeftnavComponent.prototype, "navItems", {
        get: function () {
            return this._items;
        },
        /**
        * @Property: navItems
        * @Description:  Input JSON with hasChildren property that specifies if a particular nav item has children or not. Recognizes first level child property
        * as leftNavMenuList and sub child as subMenuList.
        * @Type: JSON
      */
        set: function (itemList) {
            this._items = itemList;
        },
        enumerable: true,
        configurable: true
    });
    /**
    * @Function: logClick
    * @Description: This function adds class is-expanded to a clicked nav item if it has childrens.
    * @Param: (String) - event - Event object.
    * @Param: (String) - index - Index of clicked nav item.
    * @Return: -
  */
    LeftnavComponent.prototype.logClick = function (event, index) {
        var clickedItem = this.liList.find(function (item, itemIndex) { return itemIndex === index; });
        if (clickedItem.hasChildren) {
            // Clears all "is-expanded" classes
            this.liList.forEach(function (component, index) {
                component.isExpanded = false;
            }.bind(this));
            // Sets the isExpanded property for the clicked target
            if (this.selectedIndex === null) {
                this.selectedIndex = index;
            }
            else {
                this.selectedIndex = this.selectedIndex !== index ? index : null;
            }
        }
    };
    LeftnavComponent.prototype.ngOnInit = function () { };
    __decorate([
        core_1.ViewChildren(left_nav_parent_component_1.ParentComponent), 
        __metadata('design:type', core_1.QueryList)
    ], LeftnavComponent.prototype, "liList", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], LeftnavComponent.prototype, "navItems", null);
    LeftnavComponent = __decorate([
        core_1.Component({
            selector: 'citi-left-nav',
            template: require('./left-nav.component.html'),
            styles: [require('./left-nav.component.css')]
        }), 
        __metadata('design:paramtypes', [])
    ], LeftnavComponent);
    return LeftnavComponent;
}());
exports.LeftnavComponent = LeftnavComponent;
//# sourceMappingURL=left-nav.component.js.map