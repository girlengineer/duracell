"use strict";
var core_1 = require('@angular/core');
var left_nav_child_component_1 = require('../left-navigation-child/left-nav-child.component');
/**
 * @Component: Left Nav Parent
 * @Section: Navigation
 * @Description: This is parent component inside the left navigation menu.
*/
var ParentComponent = (function () {
    function ParentComponent() {
        this.selectedIndex = null;
        this.isExpanded = false;
        //Custom Attributes
        this.hasChildren = false;
    }
    Object.defineProperty(ParentComponent.prototype, "leftNavMenuList", {
        get: function () {
            return this._childList;
        },
        set: function (childList) {
            this._childList = childList;
        },
        enumerable: true,
        configurable: true
    });
    // When span clicked
    ParentComponent.prototype.isClicked = function () {
        this.isExpanded = !this.isExpanded;
    };
    /**
    * @Function: logClick
    * @Description: This function adds class is-expanded to a clicked nav item if it has childrens.
    * @Param: (String) - event - Event object.
    * @Param: (String) - index - Index of clicked nav item.
    * @Return: -
  */
    ParentComponent.prototype.logClick = function (event, index) {
        event.stopPropagation();
        var clickedItem = this._childList.find(function (item, itemIndex) { return itemIndex === index; });
        if (clickedItem.hasChildren) {
            // Clears all "is-expanded" classes
            this._childList.forEach(function (component, index) {
                component.isExpanded = false;
            }.bind(this));
            // Sets the isExpanded property for the clicked target
            if (this.selectedIndex === null) {
                this.selectedIndex = index;
            }
            else {
                this.selectedIndex = this.selectedIndex !== index ? index : null;
            }
        }
    };
    ParentComponent.prototype.ngOnInit = function () { };
    __decorate([
        core_1.ViewChildren(left_nav_child_component_1.ChildComponent), 
        __metadata('design:type', core_1.QueryList)
    ], ParentComponent.prototype, "liChildList", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean)
    ], ParentComponent.prototype, "hasChildren", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], ParentComponent.prototype, "title", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], ParentComponent.prototype, "href", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object), 
        __metadata('design:paramtypes', [Object])
    ], ParentComponent.prototype, "leftNavMenuList", null);
    ParentComponent = __decorate([
        core_1.Component({
            selector: '.citi-left-nav-parent',
            template: require('./left-nav-parent.component.html'),
            styles: [require('./left-nav-parent.component.css')]
        }), 
        __metadata('design:paramtypes', [])
    ], ParentComponent);
    return ParentComponent;
}());
exports.ParentComponent = ParentComponent;
//# sourceMappingURL=left-nav-parent.component.js.map