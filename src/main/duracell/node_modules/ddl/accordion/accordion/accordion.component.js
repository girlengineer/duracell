"use strict";
var core_1 = require('@angular/core');
var accordion_service_1 = require("../accordion.service");
/**
 * @Component: Accordion
 * @Description: This component generates the wrapper, title, and expand/collapse
 * button for accordions. Sections for the accordion are a separate component.
 */
var AccordionComponent = (function () {
    function AccordionComponent(service) {
        if (service === void 0) { service = new accordion_service_1.AccordionService; }
        this.service = service;
        // Holds all of the sections of the accordion
        this.sections = [];
        // Whether all sections are open
        this.allSectionsOpen = false;
        // Toggle all sections open or closed
        this.toggleAllSections = function () {
            // State to set the isOpen property of each section to
            var open = this.allSectionsOpen ? false : true;
            // Toggle all sections
            for (var i = 0, j = this.sections.length; i < j; i++) {
                this.sections[i].isOpen = open;
            }
            // If all sections were opened
            if (open) {
                // Let the component know all sections are open
                this.allSectionsOpen = true;
            }
            else {
                // Otherwise let it know all sections are not open
                this.allSectionsOpen = false;
            }
        };
        // Checks if all of the sections are open
        this.checkIfAllSectionsAreOpen = function () {
            // If all of the sections are open
            var allSectionsOpen = true;
            for (var i = 0, j = this.sections.length; i < j; i++) {
                // Check if the section is open
                !this.sections[i].isOpen ? allSectionsOpen = false : null;
            }
            // If all of the sections are open
            this.allSectionsOpen = allSectionsOpen;
        };
    }
    // On Init
    AccordionComponent.prototype.ngOnInit = function () {
        var _this = this;
        // Subscribe to the sectionAdded event
        this.service.sectionAdded.subscribe(function (section) {
            // Push the new section to the sections array
            _this.sections.push(section);
        });
        // Subscribe to the sectionOpened event
        this.service.sectionOpened.subscribe(function () {
            // Check if all sections are open
            _this.checkIfAllSectionsAreOpen();
        });
        // Subscribe to the sectionClosed event
        this.service.sectionClosed.subscribe(function () {
            // Let the component know not all sections are open
            _this.allSectionsOpen = false;
        });
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], AccordionComponent.prototype, "title", void 0);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', String)
    ], AccordionComponent.prototype, "theme", void 0);
    AccordionComponent = __decorate([
        core_1.Component({
            selector: 'citi-accordion',
            template: require('./accordion.component.html'),
            styles: [require('./accordion.component.scss')]
        }), 
        __metadata('design:paramtypes', [accordion_service_1.AccordionService])
    ], AccordionComponent);
    return AccordionComponent;
}());
exports.AccordionComponent = AccordionComponent;
//# sourceMappingURL=accordion.component.js.map